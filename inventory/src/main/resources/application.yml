micronaut:
  server:
    port: -1
  application:
    name: inventory
  security:
    authentication: bearer
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: '"${JWT_GENERATOR_SIGNATURE_SECRET:pleaseChangeThisSecretForANewOne}"'
  multitenancy:
    tenantresolver:
      httpheader:
        enabled: true
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
consul:
  client:
    defaultZone: ${CONSUL_HOST:localhost}:${CONSUL_PORT:8500}
    registration:
      enabled: true
netty:
  default:
    allocator:
      max-order: 3
dataSource:
  url: jdbc:h2:mem:devDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
  driverClassName: org.h2.Driver
  username: sa
  password: ''
  pooled: true
  jmxExport: true

hibernate:
  hbm2ddl:
    auto: update
  cache:
    queries: false
    use_second_level_cache: false
    use_query_cache: false
    # region.factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
---
grails:
  gorm:
    multiTenancy:
      mode: DISCRIMINATOR
      tenantResolverClass: 'io.micronaut.multitenancy.gorm.HttpHeaderTenantResolver'
